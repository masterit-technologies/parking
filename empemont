openapi: 3.0.0
info:
  version: '0.5'
  title: CityRadioWeb
servers:
  - url: 'https://data.rozhlasy.cz'
paths:
  /api/session/create:
    get:
      summary: 'Create session'
      operationId: sessionCreate
      tags:
        - session
      responses:
        '200':
          description: 'session data'
          #headers:
          #  x-next:
          #    description: A link to the next page of responses
          #    schema:
          #      type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sessions'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /api/authentication/token/key/{key}/session_id/{session_id}:
    get:
      summary: 'Authenticate by token key'
      operationId: authenticateToken
      tags:
        - session
      parameters:
        - name: key
          in: path
          description: Authentication key
          required: true
          schema:
            type: string
            format: string
        - name: session_id
          in: path
          description: Session id
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: 'Authentication response: Details about a user'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersByToken'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/installations/session_id/{session_id}:
    get:
      summary: 'Get available installation list'
      operationId: installations
      tags:
        - session
      parameters:
        - name: session_id
          in: path
          description: Session id
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: 'Installations response: list of available installations'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Installations'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/relations/session_id/{session_id}/installation_id/{installation_id}:
    get:
      summary: 'Get installation relations list'
      operationId: relations
      tags:
        - relation
      parameters:
        - name: session_id
          in: path
          description: Session id
          required: true
          schema:
            type: string
            format: string
        - name: installation_id
          in: path
          description: Installation id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Relations response: list of installation relations'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relations'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/relation/create/session_id/{session_id}/installation_id/{installation_id}/name/{name}:
    get:
      summary: 'Create new installation relation'
      operationId: relation-create
      tags:
        - relation
      parameters:
        - name: session_id
          in: path
          description: Session id
          required: true
          schema:
            type: string
            format: string
        - name: installation_id
          in: path
          description: Installation id
          required: true
          schema:
            type: integer
        - name: name
          in: path
          description: Name of relation
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Relation response: newly created relation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relations'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
               
  /api/relation/delete/session_id/{session_id}/installation_id/{installation_id}/relation_id/{relation_id}:
    get:
      summary: 'Delete installation relation'
      operationId: relation-delete
      tags:
        - relation
      parameters:
        - name: session_id
          in: path
          description: Session id
          required: true
          schema:
            type: string
            format: string
        - name: installation_id
          in: path
          description: Installation id
          required: true
          schema:
            type: integer
        - name: relation_id
          in: path
          description: Relation id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Relation response: deleted relation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relations'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/relation/set-complete/session_id/{session_id}/installation_id/{installation_id}/relation_id/{relation_id}/is_complete/{is_complete}:
    get:
      summary: 'Setup relation as completed (all files present)'
      operationId: relation-set-complete
      tags:
        - relation
      parameters:
        - name: session_id
          in: path
          description: Session id
          required: true
          schema:
            type: string
            format: string
        - name: installation_id
          in: path
          description: Installation id
          required: true
          schema:
            type: integer
        - name: relation_id
          in: path
          description: Relation id
          required: true
          schema:
            type: integer
        - name: is_complete
          in: path
          description: Relation complete flag
          required: true
          schema:
            type: integer
            minimum: 0
            maximum: 1
      responses:
        '200':
          description: 'Relation response: relation new state'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relations'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/relation/files/session_id/{session_id}/installation_id/{installation_id}/relation_id/{relation_id}:
    get:
      summary: 'Get list of all relation files'
      operationId: relation-files
      tags:
        - relation
      parameters:
        - name: session_id
          in: path
          description: Session id
          required: true
          schema:
            type: string
            format: string
        - name: installation_id
          in: path
          description: Installation id
          required: true
          schema:
            type: integer
        - name: relation_id
          in: path
          description: Relation id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Relation files response: relation files list'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationFiles'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/relation/file/create/user-file/session_id/{session_id}/installation_id/{installation_id}/relation_id/{relation_id}/filename/{filename}/order_position/{order_position}/is_public/{is_public}/filesize/{filesize}/lt_file/{lt_file}/ut_file/{ut_file}:
    get:
      summary: 'Create new relation file in user set folder'
      operationId: relation-file-create
      tags:
        - relation
      parameters:
        - name: session_id
          in: path
          description: Session id
          required: true
          schema:
            type: string
            format: string
        - name: installation_id
          in: path
          description: Installation id
          required: true
          schema:
            type: integer
        - name: relation_id
          in: path
          description: Relation id
          required: true
          schema:
            type: integer
        - name: filename
          in: path
          description: File name
          required: true
          schema:
            type: string
        - name: order_position
          in: path
          description: File relation playing order position
          required: true
          schema:
            type: integer
        - name: is_public
          in: path
          description: File can be played in public domain
          required: true
          schema:
            type: integer
            minimum: 0
            maximum: 1
        - name: filesize
          in: path
          description: File size defined (not uploaded yet)
          required: true
          schema:
            type: integer
            minimum: 1000
        - name: lt_file
          in: path
          description: Creator local time of file (dd.mm.yyyy hh:MM:ss)
          required: true
          schema:
            type: string
        - name: ut_file
          in: path
          description: Creator system time of file (dd.mm.yyyy hh:MM:ss)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Relation file response: created relation file'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationFiles'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/relation/file/add/from-system-set/session_id/{session_id}/installation_id/{installation_id}/relation_id/{relation_id}/type/{type}/order_position/:order_position/is_public/:is_public/lt_file/:lt_file/ut_file/:ut_file/:
    get:
      summary: 'Create new relation file from system set'
      operationId: relation-file-system-set-create
      tags:
        - relation
      parameters:
        - name: session_id
          in: path
          description: Session id
          required: true
          schema:
            type: string
            format: string
        - name: installation_id
          in: path
          description: Installation id
          required: true
          schema:
            type: integer
        - name: relation_id
          in: path
          description: Relation id
          required: true
          schema:
            type: integer
        - name: type
          in: path
          description: type
          required: true
          schema:
            type: string
            enum: ["ForeSpeech", "FinalSpeech"]
        - name: order_position
          in: path
          description: File relation playing order position
          required: true
          schema:
            type: integer
        - name: is_public
          in: path
          description: File can be played in public domain
          required: true
          schema:
            type: integer
            minimum: 0
            maximum: 1
        - name: lt_file
          in: path
          description: Creator local time of file (dd.mm.yyyy hh:MM:ss)
          required: true
          schema:
            type: string
        - name: ut_file
          in: path
          description: Creator system time of file (dd.mm.yyyy hh:MM:ss)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Relation file response: created relation file from system set'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationFiles'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/relation/file/delete/session_id/{session_id}/installation_id/{installation_id}/relation_id/{relation_id}/file_id/{id}:
    get:
      summary: 'Delete existing relation file'
      operationId: relation-file-delete
      tags:
        - relation
      parameters:
        - name: session_id
          in: path
          description: Session id
          required: true
          schema:
            type: string
            format: string
        - name: installation_id
          in: path
          description: Installation id
          required: true
          schema:
            type: integer
        - name: relation_id
          in: path
          description: Relation id
          required: true
          schema:
            type: integer
        - name: id
          in: path
          description: File id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Relation file response: deleted relation file'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationFiles'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/relation/file/upload/session_id/{session_id}/installation_id/{installation_id}/relation_id/{relation_id}/file_id/{id}:
    post:
      summary: 'Upload whole file content'
      operationId: relation-file-upload
      tags:
        - relation
      parameters:
        - name: session_id
          in: path
          description: Session id
          required: true
          schema:
            type: string
            format: string
        - name: installation_id
          in: path
          description: Installation id
          required: true
          schema:
            type: integer
        - name: relation_id
          in: path
          description: Relation id
          required: true
          schema:
            type: integer
        - name: id
          in: path
          description: File id
          required: true
          schema:
            type: integer
      requestBody:
          content:
            audio/*:
                schema:
                    type: string
                    format: binary
      responses:
        '200':
          description: 'Relation file response: uploaded relation file'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationFiles'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /api/relation/file/upload-part/session_id/{session_id}/installation_id/{installation_id}/relation_id/{relation_id}/file_id/{id}:
    post:
      summary: 'Upload part of file content (concatenation)'
      operationId: relation-file-upload-part
      tags:
        - relation
      parameters:
        - name: session_id
          in: path
          description: Session id
          required: true
          schema:
            type: string
            format: string
        - name: installation_id
          in: path
          description: Installation id
          required: true
          schema:
            type: integer
        - name: relation_id
          in: path
          description: Relation id
          required: true
          schema:
            type: integer
        - name: id
          in: path
          description: File id
          required: true
          schema:
            type: integer
      requestBody:
          content:
            audio/*:
                schema:
                    type: string
                    format: binary
      responses:
        '200':
          description: 'Relation file response: uploaded relation file'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationFiles'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /api/relations/plans/session_id/{session_id}/installation_id/{installation_id}:
    get:
      summary: 'Get list of all installation relations plans'
      operationId: relations-plans
      tags:
        - relation
      parameters:
        - name: session_id
          in: path
          description: Session id
          required: true
          schema:
            type: string
            format: string
        - name: installation_id
          in: path
          description: Installation id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Relation plans response: installation all relation plans list'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationPlans'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/relation/plans/session_id/{session_id}/installation_id/{installation_id}/relation_id/{relation_id}:
    get:
      summary: 'Get list of relation plans'
      operationId: relation-plans
      tags:
        - relation
      parameters:
        - name: session_id
          in: path
          description: Session id
          required: true
          schema:
            type: string
            format: string
        - name: installation_id
          in: path
          description: Installation id
          required: true
          schema:
            type: integer
        - name: relation_id
          in: path
          description: Relation id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Relation plans response: relation plans list'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationPlans'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/relation/plan/create/session_id/{session_id}/installation_id/{installation_id}/relation_id/{relation_id}/name/{name}/lt_start/{lt_start}/ut_start/{ut_start}:
    get:
      summary: 'Create new relation plan'
      operationId: relation-plan-create
      tags:
        - relation
      parameters:
        - name: session_id
          in: path
          description: Session id
          required: true
          schema:
            type: string
            format: string
        - name: installation_id
          in: path
          description: Installation id
          required: true
          schema:
            type: integer
        - name: relation_id
          in: path
          description: Relation id
          required: true
          schema:
            type: integer
        - name: name
          in: path
          description: Plan name
          required: true
          schema:
            type: string
        - name: lt_start
          in: path
          description: Creator local time of required playing start (dd.mm.yyyy hh:MM:ss)
          required: true
          schema:
            type: string
        - name: ut_start
          in: path
          description: Creator system time of required playing start (dd.mm.yyyy hh:MM:ss)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Relation plan response: created relation plan'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationPlans'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/relation/plan/delete/session_id/{session_id}/installation_id/{installation_id}/relation_id/{relation_id}/plan_id/{plan_id}:
    get:
      summary: 'Delete existing relation plan'
      operationId: relation-plan-delete
      tags:
        - relation
      parameters:
        - name: session_id
          in: path
          description: Session id
          required: true
          schema:
            type: string
            format: string
        - name: installation_id
          in: path
          description: Installation id
          required: true
          schema:
            type: integer
        - name: relation_id
          in: path
          description: Relation id
          required: true
          schema:
            type: integer
        - name: plan_id
          in: path
          description: Plan id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Relation file response: deleted relation plan'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationPlans'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/relation/plan/set-complete/session_id/{session_id}/installation_id/{installation_id}/relation_id/{relation_id}/plan_id/{plan_id}/is_complete/{is_complete}:
    get:
      summary: 'Set existing relation plan as complete'
      operationId: relation-plan-set-complete
      tags:
        - relation
      parameters:
        - name: session_id
          in: path
          description: Session id
          required: true
          schema:
            type: string
            format: string
        - name: installation_id
          in: path
          description: Installation id
          required: true
          schema:
            type: integer
        - name: relation_id
          in: path
          description: Relation id
          required: true
          schema:
            type: integer
        - name: plan_id
          in: path
          description: Plan id
          required: true
          schema:
            type: integer
        - name: is_complete
          in: path
          description: Relation plan complete flag
          required: true
          schema:
            type: integer
            minimum: 0
            maximum: 1
      responses:
        '200':
          description: 'Relation file response: relation plan data'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationPlans'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Session:
      type: object
      required:
        - sid
        - valid_to
      properties:
        sid:
          type: string
          format: string
        valid_to:
          type: string
          format: date-time

    Sessions:
      type: array
      items:
        $ref: '#/components/schemas/Session'

    UserByToken:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          format: string

    UsersByToken:
      type: array
      items:
        $ref: '#/components/schemas/UserByToken'

    Installation:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
        name:
          type: string
          format: string

    Installations:
      type: array
      items:
        $ref: '#/components/schemas/Installation'
    
    Relation:
      type: object
      required:
        - id
        - installation_id
        - name
        - is_complete
      properties:
        id:
          type: integer
        installation_id:
          type: integer
        name:
          type: string
          format: string
        is_complete:
          type: integer
    
    Relations:
      type: array
      items:
        $ref: '#/components/schemas/Relation'
    
    RelationFile:
      type: object
      required:
        - id
        - relation_id
        - filename
        - is_public
        - order_position
        - filesize
        - is_complete
        - ut_file
        - lt_file
      properties:
        id:
          type: integer
        relation_id:
          type: integer
        filename:
          type: string
          format: string
        is_public:
          type: integer
        order_position:
          type: integer
        filesize:
          type: integer
        is_complete:
          type: integer
        ut_file:
          type: string
          format: date-time
        lt_file:
          type: string
          format: date-time
    
    RelationFiles:
      type: array
      items:
        $ref: '#/components/schemas/RelationFile'

    RelationPlan:
      type: object
      required:
        - id
        - relation_id
        - name
        - is_complete
        - ut_start
        - lt_start
      properties:
        id:
          type: integer
        relation_id:
          type: integer
        name:
          type: string
          format: string
        is_complete:
          type: integer
        ut_start:
          type: string
          format: date-time
        lt_start:
          type: string
          format: date-time

    
    RelationPlans:
      type: array
      items:
        $ref: '#/components/schemas/RelationPlan'

    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - message
          properties:
            message:
              type: string
    
    Errors:
      type: array
      items:
        $ref: '#/components/schemas/Error'
